{"remainingRequest":"/home/ivan/Escritorio/toDoList_FrontEnd/to_do_list_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ivan/Escritorio/toDoList_FrontEnd/to_do_list_frontend/src/components/WorkArea.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ivan/Escritorio/toDoList_FrontEnd/to_do_list_frontend/src/components/WorkArea.vue","mtime":1655011485776},{"path":"/home/ivan/Escritorio/toDoList_FrontEnd/to_do_list_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ivan/Escritorio/toDoList_FrontEnd/to_do_list_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JwovLyBAIGlzIGFuIGFsaWFzIHRvIC9zcmMKaW1wb3J0IFRhYmxlQ3J1ZEMgZnJvbSAiQC9jb21wb25lbnRzL1RhYmxlQ3J1ZEMudnVlIjsKaW1wb3J0IFRpbWVMaW5lQyBmcm9tICJAL2NvbXBvbmVudHMvVGltZUxpbmVDLnZ1ZSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIldvcmtBcmVhIiwKICBjb21wb25lbnRzOiB7CiAgICBUYWJsZUNydWRDLAogICAgVGltZUxpbmVDLAogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIGV2ZW50c0hlYWRlcnM6IFsKICAgICAgewogICAgICAgIHRleHQ6ICJUaXRsZSIsCiAgICAgICAgYWxpZ246ICJsZWZ0IiwKICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgdmFsdWU6ICJ0aXRsZSIsCiAgICAgICAgd2lkdGg6ICI1JSIKICAgICAgfSwKICAgICAgeyB0ZXh0OiAiRGVzY3JpcHRpb24iLCB2YWx1ZTogImRlc2NyaXB0aW9uIiwgd2lkdGg6ICI4JSIsIHZpc2libGU6IGZhbHNlIH0sCiAgICAgIHsgdGV4dDogIkNyZWF0aW9uIGRhdGUiLCB2YWx1ZTogImNyZWF0aW9uRGF0ZSIsIHdpZHRoOiAiNCUiLCB2aXNpYmxlOiB0cnVlfSwKICAgICAgeyB0ZXh0OiAiQ29tcGxldGVkIGRhdGUiLCB2YWx1ZTogImNvbXBsZXRlZERhdGUiLHdpZHRoOiAiNCUiLCB2aXNpYmxlOiBmYWxzZX0sCiAgICAgIHsgdGV4dDogIkFjdGlvbnMiLCB2YWx1ZTogImFjdGlvbnMiLCBzb3J0YWJsZTogZmFsc2UsIHdpZHRoOiAiNCUiLCB2aXNpYmxlOiBmYWxzZSB9LAogICAgXSwKICAgIHJlY29yZHM6IFtdLAogICAgLy9Cb3RvbmVzCiAgICBsb2FkZXJQZW5kaW5nOiBudWxsLAogICAgbG9hZGVyQ29tcGxldGVkOiBudWxsLAoKICAgIGxvYWRpbmdDb21wbGV0ZWQ6IGZhbHNlLAogICAgbG9hZGluZ1BlbmRpbmc6IGZhbHNlLAogICAgLy8vLy8vLy8vLy8vLy8KCiAgICBuZXdJdGVtOiBbXSwKICB9KSwKCiAgd2F0Y2g6IHsKICAgIC8vQm90b25lZXMKICAgIGxvYWRlclBlbmRpbmcoKSB7CiAgICAgIGNvbnN0IGwgPSB0aGlzLmxvYWRlclBlbmRpbmc7CiAgICAgIHRoaXNbbF0gPSAhdGhpc1tsXTsKCiAgICAgIHNldFRpbWVvdXQoKCkgPT4gKHRoaXNbbF0gPSBmYWxzZSksIDEwMDApOwoKICAgICAgdGhpcy5sb2FkZXJQZW5kaW5nID0gbnVsbDsKICAgIH0sIAogICAgbG9hZGVyQ29tcGxldGVkKCkgewogICAgICBjb25zdCBsID0gdGhpcy5sb2FkZXJDb21wbGV0ZWQ7CiAgICAgIHRoaXNbbF0gPSAhdGhpc1tsXTsKICAgICAgc2V0VGltZW91dCgoKSA9PiAodGhpc1tsXSA9IGZhbHNlKSwgMTAwMCk7CiAgICAgIHRoaXMubG9hZGVyQ29tcGxldGVkID0gbnVsbDsKICAgIH0sCiAgICAvLy8vLy8vLy8KCiAgICByZWNvcmRzKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgIGNvbnNvbGUubG9nKCJOZXcgdmFsIixuZXdWYWwpCiAgICAgIHRoaXMubmV3SXRlbSA9IG5ld1ZhbDsKICAgIH0sCiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0SXRlbXM7CiAgICAvL3RoaXMuaW5pdGlhbGl6ZSgpOwogICAgLy90aGlzLmV2ZW50c0hlYWRlcnNbM10udmlzaWJsZSA9IGZhbHNlCiAgICBjb25zb2xlLmxvZygiSXRlbXMiLCB0aGlzLmdldEl0ZW1zKTsKCiAgfSwKCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucygndGFza3MnLCBbJ2dldEl0ZW1zJ10pLAogICAgLy8gaW5pdGlhbGl6ZSgpIHsKICAgIC8vICAgdGhpcy5yZWNvcmRzID0gWwogICAgLy8gICAgIHsKICAgIC8vICAgICAgIHRpdGxlOiAiVGFzayBPbmUiLAogICAgLy8gICAgICAgZGVzY3JpcHRpb246ICJNYWtlIHRvIGRvIGxpc3QiLAogICAgLy8gICAgICAgY3JlYXRpb25EYXRlOiAiIiwKICAgIC8vICAgICAgIGNvbXBsZXRlZERhdGU6ICI0NS81NS85OTkiLAogICAgLy8gICAgIH0sCiAgICAvLyAgICAgewogICAgLy8gICAgICAgdGl0bGU6ICJUYXNrIE9uZSIsCiAgICAvLyAgICAgICBkZXNjcmlwdGlvbjogIk1ha2UgdG8gZG8gbGlzdCIsCiAgICAvLyAgICAgICBjcmVhdGlvbkRhdGU6ICI0NS81NS85OTkiLAogICAgLy8gICAgICAgY29tcGxldGVkRGF0ZTogIjQ1LzU1Lzk5OSIsCiAgICAvLyAgICAgfSwKICAgIC8vICAgICB7CiAgICAvLyAgICAgICB0aXRsZTogIlRhc2sgT25lIiwKICAgIC8vICAgICAgIGRlc2NyaXB0aW9uOiAiTWFrZSB0byBkbyBsaXN0IiwKICAgIC8vICAgICAgIGNyZWF0aW9uRGF0ZTogIjQ1LzU1Lzk5OSIsCiAgICAvLyAgICAgICBjb21wbGV0ZWREYXRlOiAiNDUvNTUvOTk5IiwKICAgIC8vICAgICB9LAogICAgLy8gICBdOwogICAgLy8gfSwKICAgIAogICAgZ2V0SXRlbXM6IGFzeW5jIGZ1bmN0aW9uICgpewogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgY29uc3Qgc2V0dGluZyA9IHsKICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY29uc3QgdXJsID0gJ2xvY2FsaG9zdDozMDAwL2FwaS90b2RvbGlzdCc7CiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgZmV0Y2godXJsLHNldHRpbmcpOwogICAgICAgICAgICAgICAgY29uc3QganNvbiA9IGF3YWl0IGRhdGEuanNvbigpOwogICAgICAgICAgICAgICAgdGhpcy5JdGVtcyA9IGpzb247CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiSXRlbXMgbWV0b2RvcyIpOwogICAgICAgICAgICAgICAKICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycikKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgZGF0ZUZvcm1hdFVUQygpIHsKICAgICAgY29uc3QgZiA9IG5ldyBEYXRlKCk7CiAgICAgIGxldCBkYXkgPSBmLmdldERhdGUoKTsKICAgICAgbGV0IG1vbnRoID0gKCIwIiArIChmLmdldE1vbnRoKCkgKyAxKSkudG9TdHJpbmcoKS5zbGljZSgtMik7CiAgICAgIGxldCB5ZWFyID0gZi5nZXRGdWxsWWVhcigpOwogICAgICBsZXQgaG91cnMgPSAoIjAiICsgZi5nZXRVVENIb3VycygpKS50b1N0cmluZygpLnNsaWNlKC0yKTsKICAgICAgbGV0IG1pbiA9ICgiMCIgKyAoZi5nZXRNaW51dGVzKCkgKyAxKSkudG9TdHJpbmcoKS5zbGljZSgtMik7CiAgICAgIGxldCBkYXRlUmVwb3J0TmV3Rm9ybWF0ID0KICAgICAgICBkYXkgKyAiLSIgKyBtb250aCArICItIiArIHllYXIgKyAiICIgKyBob3VycyArICI6IiArIG1pbjsKICAgICAgcmV0dXJuIGRhdGVSZXBvcnROZXdGb3JtYXQ7CiAgICB9LAogIH0sCiAgY29tcHV0ZWQ6ewogICAgICAuLi5tYXBHZXR0ZXJzKCd0YXNrcycsIFsnSXRlbXMnXSksCiAgICB9LAp9Owo="},{"version":3,"sources":["WorkArea.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"WorkArea.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <v-row cols=\"12\">\n      <div class=\"pa-6\">\n        <v-btn\n          class=\"ma-2\"\n          :loading=\"loadingPending\"\n          :disabled=\"loadingPending\"\n          color=\"primary\"\n          @click=\"loaderPending = 'loadingPending'\"\n        >\n          Pending tasks\n        </v-btn>\n      </div>\n\n      <div class=\"pa-6\">\n        <v-btn\n          class=\"ma-2\"\n          :loading=\"loadingCompleted\"\n          :disabled=\"loadingCompleted\"\n          color=\"success\"\n          @click=\"loaderCompleted = 'loadingCompleted'\"\n        >\n          Completed tasks\n        </v-btn>\n      </div>\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"8\">\n        <TableCrudC :headers=\"eventsHeaders\" :records=\"records\" />\n      </v-col>\n      <v-col cols=\"4\">\n        <TimeLineC :dataTask=\"newItem\" />\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n// @ is an alias to /src\nimport TableCrudC from \"@/components/TableCrudC.vue\";\nimport TimeLineC from \"@/components/TimeLineC.vue\";\n\nexport default {\n  name: \"WorkArea\",\n  components: {\n    TableCrudC,\n    TimeLineC,\n  },\n  data: () => ({\n    eventsHeaders: [\n      {\n        text: \"Title\",\n        align: \"left\",\n        sortable: false,\n        value: \"title\",\n        width: \"5%\"\n      },\n      { text: \"Description\", value: \"description\", width: \"8%\", visible: false },\n      { text: \"Creation date\", value: \"creationDate\", width: \"4%\", visible: true},\n      { text: \"Completed date\", value: \"completedDate\",width: \"4%\", visible: false},\n      { text: \"Actions\", value: \"actions\", sortable: false, width: \"4%\", visible: false },\n    ],\n    records: [],\n    //Botones\n    loaderPending: null,\n    loaderCompleted: null,\n\n    loadingCompleted: false,\n    loadingPending: false,\n    //////////////\n\n    newItem: [],\n  }),\n\n  watch: {\n    //Botonees\n    loaderPending() {\n      const l = this.loaderPending;\n      this[l] = !this[l];\n\n      setTimeout(() => (this[l] = false), 1000);\n\n      this.loaderPending = null;\n    }, \n    loaderCompleted() {\n      const l = this.loaderCompleted;\n      this[l] = !this[l];\n      setTimeout(() => (this[l] = false), 1000);\n      this.loaderCompleted = null;\n    },\n    /////////\n\n    records(newVal, oldVal) {\n      console.log(\"New val\",newVal)\n      this.newItem = newVal;\n    },\n  },\n\n  created() {\n    this.getItems;\n    //this.initialize();\n    //this.eventsHeaders[3].visible = false\n    console.log(\"Items\", this.getItems);\n\n  },\n\n  methods: {\n    ...mapActions('tasks', ['getItems']),\n    // initialize() {\n    //   this.records = [\n    //     {\n    //       title: \"Task One\",\n    //       description: \"Make to do list\",\n    //       creationDate: \"\",\n    //       completedDate: \"45/55/999\",\n    //     },\n    //     {\n    //       title: \"Task One\",\n    //       description: \"Make to do list\",\n    //       creationDate: \"45/55/999\",\n    //       completedDate: \"45/55/999\",\n    //     },\n    //     {\n    //       title: \"Task One\",\n    //       description: \"Make to do list\",\n    //       creationDate: \"45/55/999\",\n    //       completedDate: \"45/55/999\",\n    //     },\n    //   ];\n    // },\n    \n    getItems: async function (){\n            try {\n                const setting = {\n                    method: 'GET',\n                }\n                const url = 'localhost:3000/api/todolist';\n                const data = await fetch(url,setting);\n                const json = await data.json();\n                this.Items = json;\n                console.log(\"Items metodos\");\n               \n            } catch (error) {\n                console.log(err)\n            }\n        },\n\n    dateFormatUTC() {\n      const f = new Date();\n      let day = f.getDate();\n      let month = (\"0\" + (f.getMonth() + 1)).toString().slice(-2);\n      let year = f.getFullYear();\n      let hours = (\"0\" + f.getUTCHours()).toString().slice(-2);\n      let min = (\"0\" + (f.getMinutes() + 1)).toString().slice(-2);\n      let dateReportNewFormat =\n        day + \"-\" + month + \"-\" + year + \" \" + hours + \":\" + min;\n      return dateReportNewFormat;\n    },\n  },\n  computed:{\n      ...mapGetters('tasks', ['Items']),\n    },\n};\n</script>\n"]}]}